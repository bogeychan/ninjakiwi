import type * as BTD6 from '../models/btd6';

import { json } from '../utils';

/**
 * A list of all available Race events
 */
export function races() {
  return json<BTD6.Race[]>(`/btd6/races`);
}

/**
 * A race leaderboard
 */
export function raceLeaderbord({
  raceID
}: {
  /** The current Race ID */
  raceID: string;
}) {
  return json<BTD6.RaceLeaderboard>(`/btd6/races/${raceID}/leaderboard`);
}

/**
 * Metadata for a race event
 */
export function raceMetadata({
  raceID
}: {
  /** The current Race ID */
  raceID: string;
}) {
  return json<BTD6.EventMetadata>(`/btd6/races/${raceID}/metadata`);
}

/**
 * List all available Boss events
 */
export function bosses() {
  return json<BTD6.Boss[]>(`/btd6/bosses`);
}

/**
 * Load a Boss event leaderboard
 */
export function bossLeaderboard({
  bossID,
  type,
  teamSize
}: {
  /** The current boss event ID */
  bossID: string;
  /** A boss event type */
  type: 'standard' | 'elite';
  /** The size of the team. Currently, only single player leaderboards are supported so this value should always be '1' */
  teamSize: '1';
}) {
  return json<BTD6.BossLeaderboard[]>(
    `/btd6/bosses/${bossID}/leaderboard/${type}/${teamSize}`
  );
}

/**
 * Load Boss event Metadata
 */
export function bossMetadata({
  bossID,
  difficulty
}: {
  /** The current boss event ID */
  bossID: string;
  /** A boss event difficulty */
  difficulty: 'standard' | 'elite';
}) {
  return json<BTD6.EventMetadata>(
    `/btd6/bosses/${bossID}/metadata/${difficulty}`
  );
}

/**
 * Load information about a BTD6 Player
 */
export function user({
  userID
}: {
  /** This can be an encrypted ID generated by the API or a user Open Access Key (OAK) - https://ninja.kiwi/opendatafaq */
  userID: string;
}) {
  return json<BTD6.UserProfile>(`/btd6/users/${userID}`);
}

/**
 * List all available Challenge Filters
 */
export function challengeFilters() {
  return json<BTD6.ChallangeFilter[]>(`/btd6/challenges`);
}

/**
 * List challenges based on a filter
 */
export function challengesByFilter({
  challengeFilter
}: {
  /** The current challenge filter */
  challengeFilter: 'newest' | 'trending' | 'daily';
}) {
  return json<BTD6.Challenge[]>(`/btd6/challenges/filter/${challengeFilter}`);
}

/**
 * Get specific information about a challenge
 */
export function challenge({
  challengeID
}: {
  /** The ID of the current challenge */
  challengeID: string;
}) {
  return json<BTD6.EventMetadata>(`/btd6/challenges/challenge/${challengeID}`);
}

/**
 * Load information about current and historical CT events
 */
export function ct() {
  return json<BTD6.CT[]>(`/btd6/ct`);
}

/**
 * Load Top Player Leaderboard for a CT event
 */
export function ctTopPlayers({
  ctID
}: {
  /** The ID of the current CT event */
  ctID: string;
}) {
  return json<BTD6.CTLeaderboardPlayer[]>(
    `/btd6/ct/${ctID}/leaderboard/player`
  );
}

/**
 * Load Top Team Leaderboard for a CT event
 */
export function ctTopTeams({
  ctID
}: {
  /** The ID of the current CT event */
  ctID: string;
}) {
  return json<BTD6.CTLeaderboardTeam[]>(`/btd6/ct/${ctID}/leaderboard/team`);
}

/**
 * Load information about a BTD6 Team
 */
export function guild({
  guildID
}: {
  /** The current guild ID */
  guildID: string;
}) {
  return json<BTD6.GuildProfile>(`/btd6/guild/${guildID}`);
}

/**
 * A list of all available Odyssey events
 */
export function odyssey() {
  return json<BTD6.Odyssey[]>(`/btd6/odyssey`);
}

/**
 * A odyssey event metadata
 */
export function odysseyMetadata({
  odysseyID,
  difficulty
}: {
  /** The ID of the current Odyssey event */
  odysseyID: string;
  /** The current difficulty */
  difficulty: 'easy' | 'medium' | 'hard';
}) {
  return json<BTD6.OdysseyMetadata>(`/btd6/odyssey/${odysseyID}/${difficulty}`);
}

/**
 * A odyssey event map information
 */
export function odysseyMapMetadata({
  odysseyID,
  difficulty
}: {
  /** The ID of the current Odyssey event */
  odysseyID: string;
  /** The current difficulty */
  difficulty: 'easy' | 'medium' | 'hard';
}) {
  return json<BTD6.EventMetadata>(
    `/btd6/odyssey/${odysseyID}/${difficulty}/maps`
  );
}
